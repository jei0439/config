spring:
  #oracle数据连接
  datasource:
    url: jdbc:oracle:thin:@172.18.55.163:1521:p3dbrp1
    username: P3WITWORKSTRY
    password: P3WITWORKSTRY2017
    driver-class-name: oracle.jdbc.driver.OracleDriver
  sleuth:
    web:
      client:
        enabled: true
    sampler:
      probability: 1.0 #将采样比例设置为 1.0，也就是全部都需要。默认是 0.1
    zipkin:
      base-url: http://172.18.55.201:9411/ #Zipkin 服务器的地址
      enabled: true
      sender:
        type: RABBIT
  rabbitmq:
    host: 172.18.50.234
    port: 5672
    username: admin
    password: admin
    #消息发送至交换机确认机制，是否确认回调
    publisher-confirms: true
    #消息发送至交换机确认机制，是否返回回调
    publisher-returns: true
    listener:
      direct:
        acknowledge-mode: manual
      simple:
        #回调应答方式，手动应答
        acknowledge-mode: manual
        #指定最小的消费者数量
        concurrency: 1
        #指定最大的消费者数量
        max-concurrency: 100
      retry:
        #是否支持重试
        enabled: true
        max-attempts: 10
        initial-interval: 10000
  #配置mongoDB数据源
  data:
    mongodb:
      uri: mongodb://sysroot:root@172.18.50.231:27017/admin
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    host: 172.18.50.235
    #    host: localhost
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password:
    timeout: 20000ms
eureka:
  instance:
    prefer-ip-address: true
    #instance-id: http://account:${serve.port}
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
#熔断器开启
feign:
  hystrix:
    enabled: true

#1.如果hystrix.command.default.execution.timeout.enabled为true,则会有两个执行方法超时的配置,
#  一个就是ribbon的ReadTimeout,一个就是熔断器hystrix的timeoutInMilliseconds, 此时谁的值小谁生效
#2.如果hystrix.command.default.execution.timeout.enabled为false,则熔断器不进行超时熔断,
#  而是根据ribbon的ReadTimeout抛出的异常而熔断,也就是取决于ribbon
#3.ribbon的ConnectTimeout,配置的是请求服务的超时时间,除非服务找不到,或者网络原因,这个时间才会生效
#4.ribbon还有MaxAutoRetries对当前实例的重试次数,MaxAutoRetriesNextServer对切换实例的重试次数,
#  如果ribbon的ReadTimeout超时,或者ConnectTimeout连接超时,会进行重试操作
#5.通常熔断的超时时间需要配置的比ReadTimeout长,ReadTimeout比ConnectTimeout长

ribbon:
  OkToRetryOnAllOperations: false #对所有操作请求都进行重试,默认false
  ReadTimeout: 50000   #负载均衡超时时间，默认值5000
  ConnectTimeout: 3000 #ribbon请求连接的超时时间，默认值2000
  MaxAutoRetries: 0     #对当前实例的重试次数，默认0
  MaxAutoRetriesNextServer: 1 #对切换实例的重试次数，默认1
hystrix:
  command:
    default:  #default全局有效，service id指定应用有效
      execution:
        timeout:
          #如果enabled设置为false，则请求超时交给ribbon控制,为true,则超时作为熔断根据
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 106000 #断路器超时时间，默认1000ms

#熔断器管理界面
management:
  endpoints:
    web:
      exposure:
        include: '*'

#自定义锁配置
locker:
  time:
    #最大锁定时间
    max-locked-time: 5000
    #锁查询间隔时间
    interval: 40
    #等待超时时间
    time-out: 5500